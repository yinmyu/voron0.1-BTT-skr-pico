# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.1 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0



#####################################################################
#      include
#####################################################################
[include mcu/*.cfg]
[include macro/*.cfg]
[include printer/*.cfg]
## [include fluidd.cfg]

#####################################################################

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712910D288-if00
restart_method: command


[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[pause_resume]
# recover_velocity: 50.
# 当捕捉/恢复功能被启用时，返回到捕获的位置的速度(单位：毫米/秒)。
# 默认为50.0 mm/s。

[display_status]


#####################################################################
#      Printer Settings
#####################################################################

[printer]
kinematics: corexy
max_velocity: 200               #   运动的最大速度（单位：mm/s）。
#max_accel: 1500
max_accel: 2000               # Should be set to 4000, 7000 when tuning ringing tower
max_accel_to_decel: 1000      # Should be set to 4000, 7000 when tuning ringing tower
#   这设置了最大加速度(以mm/s^2为单位)。
max_z_velocity: 15 #z轴最大速度
max_z_accel: 45 #z轴最大加速度
square_corner_velocity: 6.0 # 方形拐角速度，小一点可以有效避免平台重带来的惯性 

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]                                                      #空闲超时。默认启用空闲超时 - 添加显式 idle_timeout 配置分段以更改默认设置。
timeout: 3800
                                                                    #   在执行以上 G-Code 前等待的空闲时间（以秒为单位）默认为 600 秒。

[safe_z_home]                                                       #安全Z轴归位。可以用该机制定义Z轴归位时的 X, Y 坐标。在工具头必须先移动到打印床中央再进行Z归位时很有用。
home_xy_position: 120,120                                           #   一个X，Y坐标（例如100，100），在这个坐标上应该进行Z归位。
speed: 50.0                                                         #   工具头移动到安全Z原点的速度。默认为50毫米/秒
z_hop: 5
#   在归位前抬升Z轴的距离（mm）。这将用于任何归位命令，即使它没有将Z轴归位。
#   如果Z轴已经归位，并且当前的Z轴位置小于z_hop，那么这条命令将把打印头提升到z_hop的高度。如果Z轴尚未归位，则打印头将被提升z_hop的高度。
#   默认不执行Z抬升。

## To be used with BED_SCREWS_ADJUST
[bed_screws]
#screw1: 65,5
# 第一颗打印机调平螺丝的X,Y坐标。这是将命令喷嘴移动到螺丝正上方时的位置（或在床上方时尽可能接近的位置）。
#screw1_name: front screw
# 给定螺丝的名称。当调平助手脚本运行时会使用该名称。
#screw2: 20,100
#screw2_name: back left
#screw3: 100,100
#screw3_name: back right
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right